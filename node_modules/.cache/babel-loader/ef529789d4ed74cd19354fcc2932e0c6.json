{"ast":null,"code":"import _slicedToArray from \"/home/munaf/Code/matrial/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/munaf/Code/matrial/src/App.js\";\nimport React, { useState } from 'react';\nimport Nav from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Content from \"./components/content\";\nimport { muscles, mainExercises } from \"./store\";\n\nfunction App() {\n  let _useState = useState(exercises),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategory = _useState2[0],\n      setSelectedCategory = _useState2[1];\n\n  let _useState3 = useState(exec),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exercises = _useState4[0],\n      setExercises = _useState4[1];\n\n  let sortedEx = () => {\n    let sortedExercise = exercises.reduce((exercises, exercise) => {\n      let muscles = exercise.muscles;\n      exercises[muscles] = exercises[muscles] ? [...exercises[muscles], exercise] : exercises[muscles] = [exercise];\n      return exercises;\n    }, {});\n    return Object.entries(sortedExercise);\n  };\n\n  let handleChange = () => {\n    setSelectedCategory;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Content, {\n    exercises: sortedEx(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    muscles: muscles,\n    value: 0,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/munaf/Code/matrial/src/App.js"],"names":["React","useState","Nav","Footer","Content","muscles","mainExercises","App","exercises","selectedCategory","setSelectedCategory","exec","setExercises","sortedEx","sortedExercise","reduce","exercise","Object","entries","handleChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,OAAR,EAAiBC,aAAjB,QAAqC,SAArC;;AAGA,SAASC,GAAT,GAAe;AAAA,kBACiCN,QAAQ,CAACO,SAAD,CADzC;AAAA;AAAA,MACRC,gBADQ;AAAA,MACUC,mBADV;;AAAA,mBAEmBT,QAAQ,CAACU,IAAD,CAF3B;AAAA;AAAA,MAERH,SAFQ;AAAA,MAEGI,YAFH;;AAIb,MAAIC,QAAQ,GAAG,MAAK;AAElB,QAAIC,cAAc,GAAIN,SAAS,CAACO,MAAV,CAAiB,CAACP,SAAD,EAAYQ,QAAZ,KAAyB;AAAA,UACzDX,OADyD,GAC9CW,QAD8C,CACzDX,OADyD;AAE9DG,MAAAA,SAAS,CAACH,OAAD,CAAT,GAAqBG,SAAS,CAACH,OAAD,CAAT,GAAqB,CAAC,GAAGG,SAAS,CAACH,OAAD,CAAb,EAAwBW,QAAxB,CAArB,GAAwDR,SAAS,CAACH,OAAD,CAAT,GAAqB,CAACW,QAAD,CAAlG;AACE,aAAOR,SAAP;AACD,KAJmB,EAIjB,EAJiB,CAAtB;AAKE,WAAOS,MAAM,CAACC,OAAP,CAAeJ,cAAf,CAAP;AAEH,GATD;;AAUA,MAAIK,YAAY,GAAG,MAAM;AACvBT,IAAAA,mBAAmB;AACpB,GAFD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAIG,QAAQ,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAIR,OAAnB;AAA4B,IAAA,KAAK,EAAI,CAArC;AAAwC,IAAA,YAAY,EAAIc,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAQK;;AAEP,eAAeZ,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Nav from \"./components/navbar\"\nimport Footer from \"./components/footer\"\nimport Content from \"./components/content\"\nimport {muscles, mainExercises} from \"./store\"\n\n\nfunction App() {\n  let [selectedCategory, setSelectedCategory] = useState(exercises)\n  let [exercises, setExercises] = useState(exec)\n\n  let sortedEx = ()=> {\n    \n    let sortedExercise =  exercises.reduce((exercises, exercise) => {\n      let {muscles} = exercise;\n      exercises[muscles] = exercises[muscles] ? [...exercises[muscles], exercise]: exercises[muscles] = [exercise]\n        return exercises\n      }, {})\n      return Object.entries(sortedExercise)\n    \n  }\n  let handleChange = () => {\n    setSelectedCategory \n  }\n\n  \n  return (\n    <div>\n      <Nav />   \n      <Content exercises = {sortedEx()}/>\n      <Footer muscles = {muscles} value = {0} handleChange = {handleChange} />\n    </div>\n  )\n        \n      }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}